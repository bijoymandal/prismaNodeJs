// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(uuid())
  name            String?
  email           String?          @unique
  age             Int
  is_admin        Boolean          @default(false)
  role            Role             @default(BASIC) // role based login in user actual Role
  is_active       Boolean          @default(false)
  writtenPosts    Post[]           @relation("WrittenPosts") //one user can only one post unique id represent
  favoritePosts   Post[]           @relation("favoritePosts")
  userPerferences UserPerferences?

  //two people have same name age 
  //two user can not have same name and same age
  @@unique([age, name])
  @@index([email, name])
}

model UserPerferences {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

model Post {
  id            String     @id @default(uuid())
  title         String
  averagerating Float
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      String
  favoritedBy   User?      @relation("favoritePosts", fields: [favoritedById], references: [id])
  favoritedById String?
  categories    Category[]

  //composite id 
  // @@id([])
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}

enum Role {
  BASIC
  ADMIN
}
